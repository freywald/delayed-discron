#!/bin/bash

function run_discron_tab_file ()
{
	lock_file="/tmp/delayed-discron.lock"
	exec 9>| "$lock_file"

	if ! flock -n 9; then
		printf 'Another instance is running…\n'
		$debug && printf >&2 'Cannot acquire lock, giving up on "%s".\n' "$lock_file"

		exit 1
	fi # this now runs under the lock until 9 is closed (it will be closed automatically when the script ends)
    $debug && printf >&2 'Successfully acquired main lock "%s".\n' "$lock_file"

	cd -- "/tmp" || exit
	crontab_file="$1"

	if [[ -z "$1" ]]; then
		echo >&2 "Error: no discron file!"

		exit 1
	fi

	# @source: https://github.com/morganhk/BashCronParse
	readarray -t lines < "$crontab_file"

	for line in "${lines[@]}"; do
		index=0

		if [[ "${line:0:1}" == "#" ]]; then
			continue
		fi

		if [[  "$line" =~ ^[[:space:]]*$ ]]; then
			continue
		fi

		IFS=$'\t' read -r -a segments < <(echo "$line")
		for (( i=0; i < ${#segments[@]}; i++ )); do
			segments[i]=$(trim_string "${segments[i]}")
		done

		if (( ${#segments[@]} <= 6 )); then
			echo >&2 "Error: malformed discron specification:"
			names=(NAME MINUTE HOUR DAY MONTH WEEKDAY COMMAND)
			echo >&2 -ne "Expected:\t"
			for (( i=0; i < ${#names[@]}; i++ )); do
				name="${names[i]}"
				echo >&2 -ne "($i) $name\t\t"
			done
			echo >&2
			echo >&2 -ne "Given:\t\t"
			for (( i=0; i < ${#segments[@]}; i++ )); do
				segment="${segments[i]}"
				echo >&2 -ne "($i) $segment\t\t"
			done
			echo >&2
			echo >&2

			exit 1
		fi

		name="${segments[0]}"
		waiting=true
		command=""
		i=1

		# @TODO check if job is late and needs to be run
		state_file="$state_directory/$name.state"

		for (( ; i < ${#segments[@]} ; i++ )); do
			segment="${segments[i]}"
			segment_stripped="${segment##*/}"

			if (( index == 0 )); then
				minutes="$(date "+%M")"

				if echo "$segment" | grep '^\*/[0-9]\{1,2\}' > "/dev/null"; then
					$debug && echo "p $minutes % $segment_stripped == $(( minutes%segment_stripped  )) == 0 ?"
					(( minutes%segment_stripped != 0 )) && break
				fi
				if echo "$segment" | grep '^[0-9]\{1,2\}' > "/dev/null"; then
					$debug && echo "x $minutes == $segment ?"
					(( minutes != segment )) && break
				fi

			elif (( index == 1 )); then
				hours="$(date "+%k")"

				if echo "$segment" | grep '^\*/[0-9]\{1,2\}' > "/dev/null"; then
					(( hours%segment_stripped != 0 )) && break
				fi
				if echo "$segment" | grep '^[0-9]\{1,2\}' > "/dev/null"; then
					(( hours != segment )) && break
				fi

			elif (( index == 2 )); then
				day="$(date "+%d")"

				if echo "$segment" | grep '^\*/[0-9]\{1,2\}' > "/dev/null"; then
					(( day%segment_stripped != 0 )) && break
				fi
				if echo "$segment" | grep '^[0-9]\{1,2\}' > "/dev/null"; then
					(( day != segment )) && break
				fi

			elif (( index == 3 )); then
				month="$(date "+%m")"

				if echo "$segment" | grep '^\*/[0-9]\{1,2\}' > "/dev/null"; then
					(( month%segment_stripped != 0 )) && break
				fi
				if echo "$segment" | grep '^[0-9]\{1,2\}' > "/dev/null"; then
					(( month != segment )) && break
				fi

			elif (( index == 4 )); then
				weekday="$(date "+%u")"

				if echo "$segment" | grep '^\*/[0-9]\{1,2\}' > "/dev/null"; then
					(( weekday%segment_stripped != 0 )) && break
				fi
				if echo "$segment" | grep '^[0-9]\{1,2\}' > "/dev/null"; then
					(( weekday != segment )) && break
				fi
			elif (( index == 5 )); then
				command="$segment"

				if [[ -z "$command" ]]; then
					echo >&2 "Error: command is empty"

					break
				fi

				waiting=false
			else
				echo >&2 "Error: malformed discron specification: $segment"
				waiting=true

				break
			fi

			index=$((index+1))
		done

		if ! $waiting; then
			error_log_file="$log_directory/$name.error.log"
			full_log_file="$log_directory/$name.log"
			$debug && echo "STARTING: $name will now be handled."

			( nohup "$__script_path/library/execute-command" "$name" "$command" < "/dev/null" 3>&2 2>&1 1>&3 3>&- | tee -a "$error_log_file") | tee -a "$full_log_file" 2>&1 & disown
		else
			$debug && echo "WAITING: it's not time for $name to be executed…"
		fi
	done
}
